<% content_for :title do %>
  <% "OpenSplitTime: Event staging - #{@presenter&.name || 'New event'}" %>
<% end %>

<% content_for(:container_type) do %>
  skip
<% end %>

<!-- Vue.js Form Templates-->

<script type="text/x-template" id="event">
  <div>
    <aside class="col-xs-12">
      <h3>
        <span class="help-tooltip pull-right" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="An Event is run on a Course. An Event happens once, while a Course can be reused for many Events."><i class="glyphicon glyphicon-question-sign"></i></span>
        <strong>Provide Information About Your Event</strong>
      </h3>
      <p>Your event will be run on a Course and will belong to an Organization. You'll either use an existing Course or
        create one, and either use an existing Organization or create one.</p>
      <p>
        <router-link to="/splits" id="continue-side-1" class="btn btn-primary" :disabled="!isEventValid()">Continue&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
        </router-link>
      </p>
      <p><span class="brackets"><a href=<%= event_groups_path %>>Cancel</a></span></p>
    </aside>
    <article class="col-xs-12">
      <div class="form-group">
        <label class="required">What is your organization called?</label>
        <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Your Organization is the administrative umbrella for your Events and provides a home page to organize related Events. You will be able to choose trusted Organization Stewards who have access to all Event data within an Organization."><i class="glyphicon glyphicon-question-sign"></i></span>
        <div class="row">
          <div class="col-xs-12 col-sm-6 col-lg-7 no-padding-right">
            <resource-select id="organization-select" class="form-control" v-model="eventModel.eventGroup.organization" source="organizations?filter[editable]=true">
              <option :value="null" selected disabled>Select One</option>
            </resource-select>
          </div>
          <div class="col-xs-12 col-sm-1 text-center middle-or">
            <span>or</span>
          </div>
          <div class="col-xs-12 col-sm-5 col-lg-4 form-control-fill no-padding-left">
            <button type="button" class="btn btn-success" v-on:click="eventModel.eventGroup.organization = newOrganization()">Add
              New Organization&nbsp;<i class="glyphicon glyphicon-plus"></i></button>
          </div>
        </div>
      </div>
      <div class="well well-sm border-none" v-if="eventModel.eventGroup.organization" v-bind:class="{ 'new' : !eventModel.eventGroup.organization.id }">
        <div class="row">
          <div class="form-group col-xs-12">
            <label class="required">Organization Name</label>
            <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Name your Organization for the Events it organizes (like 'Hardrock 100' or for the company that organizes the Events (like 'Dirty 30 Running')."><i class="glyphicon glyphicon-question-sign"></i></span>
            <input id="organization-name-field" type="text" class="form-control" placeholder="Your organization name" v-model="eventModel.eventGroup.organization.name" :disabled="!eventModel.eventGroup.organization.editable">
          </div>
          <div class="col-xs-12" v-if="!eventModel.eventGroup.organization.id">
            <span class="brackets" v-on:click="eventModel.eventGroup.organization = null"><a href="#">Cancel</a></span>
          </div>
        </div>
      </div>
      <div class="form-group">
        <label>Event Start Time</label>
        <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="For an Event with multiple waves or differing start times, you will generally want to use the earliest start time."><i class="glyphicon glyphicon-question-sign"></i></span>
        <input-datetime v-model="eventModel.virtualStartTime"></input-datetime>
      </div>
      <div class="form-group">
        <label>Event Time Zone</label>
        <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Some Tooltip"><i class="glyphicon glyphicon-question-sign"></i></span>
        <select id="time-zone-select" class="form-control" v-model="eventModel.homeTimeZone">
          <option v-for="timeZone in timeZones" :value="timeZone.name">{{ timeZone.name }}&nbsp;[&nbsp;{{
            timeZone.offset }}&nbsp;]
          </option>
        </select>
      </div>
      <div class="form-group">
        <label class="required">Event Name</label>
        <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="A name will be suggested based on your organization name and event year, but feel free to change to your liking."><i class="glyphicon glyphicon-question-sign"></i></span>
        <input id="event-name-field" type="text" class="form-control" placeholder="Your event name" v-model="eventModel.name" v-prefill="suggestedName()">
      </div>
      <div class="form-group">
        <label>Short Event Name</label>
        <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Make a shorter name if this is one event in a group, for example, '50K' or '12 hour'."><i class="glyphicon glyphicon-question-sign"></i></span>
        <input id="event-short-name-field" type="text" class="form-control" placeholder="Short name" v-model="eventModel.shortName">
      </div>
      <div class="form-group event-info-course-row">
        <label for="event-start-time">Choose an existing course</label>
        <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="If you have already created a course for a prior Event like this one, you can select it here."><i class="glyphicon glyphicon-question-sign"></i></span>
        <div class="row">
          <div class="col-xs-12 col-sm-6 col-lg-7 no-padding-right">
            <resource-select id="course-select" class="form-control" v-model="eventModel.course" source="courses?filter[editable]=true&page[size]=100">
              <option :value="null" selected disabled>Select One</option>
            </resource-select>
          </div>
          <div class="col-xs-12 col-sm-1 text-center middle-or">
            <span>or</span>
          </div>
          <div class="col-xs-12 col-sm-5 col-lg-4 form-control-fill no-padding-left">
            <button type="button" class="btn btn-success" v-on:click="eventModel.course = newCourse()">Add New Course&nbsp;<i class="glyphicon glyphicon-plus"></i>
            </button>
          </div>
        </div>
      </div>
      <div class="well well-sm border-none" v-if="eventModel.course" v-bind:class="{ 'new' : !eventModel.course.id }">
        <div class="row">
          <div class="form-group col-xs-12">
            <label class="required">Course Name</label>
            <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Give your Course a descriptive name that is appropriate for multiple Events. If your Event is the Trailrock 50 2017, this Course might be the Trailrock 50 Course."><i class="glyphicon glyphicon-question-sign"></i></span>
            <input id="course-name-field" type="text" class="form-control" placeholder="Your course name" v-model="eventModel.course.name" v-prefill="(eventModel.eventGroup.organization) ? eventModel.eventGroup.organization.name + ' Course' : ''">
          </div>
          <div class="form-group col-xs-12">
            <label class="required">Course Distance</label>
            <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="If your Event consists of multiple identical laps (and you are keeping track of laps as such), then this should be the distance of a single lap."><i class="glyphicon glyphicon-question-sign"></i></span>
            <div class="input-group">
              <input-units id="course-distance-field" type="text" class="form-control" placeholder="miles" v-model.number="eventModel.course.endSplit('finish').distanceFromStart" v-mask="{ alias: 'decimal', placeholder: '', digits: 2 }" :scale="units.forDistance()"/>
              <span class="input-group-addon">{{ units.distance }}</span>
            </div>
          </div>
          <div class="form-group col-xs-6">
            <label class="required">Total Vertical Gain</label>
            <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Cumulative vertical gain for your Course. If your Event consists of multiple identical laps (and you are keeping track of laps as such), then this should be the vertical gain of a single lap."><i class="glyphicon glyphicon-question-sign"></i></span>
            <div class="input-group">
              <input-units id="course-vert-gain-field" type="text" class="form-control" placeholder="feet" v-model.number="eventModel.course.endSplit('finish').vertGainFromStart" v-mask="{ alias: 'decimal', placeholder: '', digits: 1 }" :scale="units.forElevation()" :places="1"/>
              <span class="input-group-addon">{{ units.elevation }}</span>
            </div>
          </div>
          <div class="form-group col-xs-6">
            <label class="required">Total Vertical Loss</label>
            <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Cumulative vertical loss for your Course. If your Event consists of multiple identical laps (and you are keeping track of laps as such), then this should be the vertical loss of a single lap."><i class="glyphicon glyphicon-question-sign"></i></span>
            <div class="input-group">
              <input-units id="course-vert-loss-field" type="text" class="form-control" placeholder="feet" v-model.number="eventModel.course.endSplit('finish').vertLossFromStart" v-mask="{ alias: 'decimal', placeholder: '', digits: 1 }" :scale="units.forElevation()" :places="1"/>
              <span class="input-group-addon">{{ units.elevation }}</span>
            </div>
          </div>
          <div class="form-group col-xs-12">
            <label>Description</label>
            <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Provide an optional description of your Course here."><i class="glyphicon glyphicon-question-sign"></i></span>
            <textarea id="course-description-field" class="form-control" placeholder="Course Description" v-model="eventModel.course.description"></textarea>
          </div>
          <div class="col-xs-12" v-if="!eventModel.course.id">
            <span class="brackets" v-on:click="eventModel.course = null"><a href="#">Cancel</a></span>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="form-group col-xs-4">
          <label class="required">Multiple laps?</label>
          <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Enable this feature only if your Event consists of multiple <strong>identical</strong> laps and you are keeping track of laps as such."><i class="glyphicon glyphicon-question-sign"></i></span>

          <div class="form-inline">
            <label class="switchery-label">
              <span>No</span>
              <input type="checkbox" data-toggle="switchery" data-size="small" value="true" v-model="eventModel.laps" v-on:change="eventModel.lapsRequired = 1"/>
              <span>Yes</span>
            </label>

          </div>
        </div>
        <div v-show="eventModel.laps" class="form-group col-xs-8">
          <label class="required">How many laps?</label>
          <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Use 0 for a time-based event having unlimited laps."><i class="glyphicon glyphicon-question-sign"></i></span>
          <input type="text" class="form-control" v-model.number="eventModel.lapsRequired" v-mask="{ alias: 'integer' }">
        </div>
      </div>
      <div class="row">
        <div class="col-xs-12">
          <router-link to="/splits" id="continue-bottom-1" class="btn btn-primary pull-right" :disabled="!eventModel.validate()">Continue&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
          </router-link>
        </div>
      </div>
    </article>
  </div>
</script>

<script type="text/x-template" id="splits">
  <div>
    <aside class="col-xs-12">
      <h3>
        <span class="help-tooltip pull-right" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="From this screen you can create new Splits, delete unused Splits, and associate or disassociate Course Splits with your Event."><i class="glyphicon glyphicon-question-sign"></i></span>
        <strong>Create Splits For Your Event</strong>
      </h3>
      <p>Start and Finish splits have been created for you. Edit them to add location and elevation data. Add
        intermediate splits at points where intermediate times will be recorded.</p>
      <p>
        <router-link to="/" class="btn btn-default"><i class="glyphicon glyphicon-arrow-left"></i>&nbsp;Previous
        </router-link>
        <router-link to="/entrants" id="continue-side-2" class="btn btn-primary">Continue&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
        </router-link>
      </p>
    </aside>
    <article class="col-xs-12" v-if="eventModel.course">
      <div class="row">
        <div class="col-xs-12 col-sm-7">
          <h5>
            <strong>Your Splits:</strong>
            <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Splits having latitude and longitude will appear on this map. Click in the table below to add or edit Splits."><i class="glyphicon glyphicon-question-sign"></i></span>
          </h5>
        </div>
        <div class="col-xs-12 col-sm-5">
          <div class="form-group has-feedback">
            <input type="text" class="form-control" v-model="filter" placeholder="Filter:"/>
            <a href="#" class="form-control-feedback form-control-clickable glyphicon glyphicon-remove" v-on:click.prevent="filter = ''"></a>
          </div>
        </div>
        <div class="col-xs-12">
          <google-map v-model="highlight" fit :route="eventModel.course.splits"></google-map>
        </div>
        <div class="col-xs-12">
          <data-tables :rows="eventModel.course.splits" :filter="filter" :entries="30" v-on:edit="modalData = $event" class="splits-table table-hover" v-on:mouseleave="highlight = null">
            <tr slot="header">
              <th data-orderable="false"></th>
              <th>Name</th>
              <th data-order="asc">
                Distance
              </th>
              <th>
                Vert. Gain
              </th>
              <th>
                Vert. Loss
              </th>
              <th data-orderable="false">
                Manage
                <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Edit, associate or disassociate, and delete. Note that a Split cannot be deleted if any times are associated with it."><i class="glyphicon glyphicon-question-sign"></i></span>
              </th>
            </tr>
            <template slot="row" scope="vm">
              <tr :disabled="!vm.row.associated" v-on:mouseenter="highlight = vm.row">
                <td>
                  <i class="glyphicon glyphicon-flag text-success" v-if="vm.row.kind == 'start'"></i>
                  <img src="<%= image_url("icons/checkered_flag.svg", size: '1em') %>" v-else-if="vm.row.kind == 'finish'">
                </td>
                <td>{{ vm.row.baseName }}</td>
                <td :class="'unit-' + units.distance">{{ units.round( vm.row.distanceFromStart * units.forDistance(), 2
                  ) }}
                </td>
                <td :class="'unit-' + units.elevation">{{ units.round( vm.row.vertGainFromStart * units.forElevation(),
                  1 ) }}
                </td>
                <td :class="'unit-' + units.elevation">{{ units.round( vm.row.vertLossFromStart * units.forElevation(),
                  1 ) }}
                </td>
                <td class="edit">
                  <!--<span class="marker"><%= image_tag("icons/dblue.svg", size: '16') %></span>-->
                  <a href="#" class="edit" data-toggle="modal" data-target="#js-split-modal" v-on:click="vm.$emit('edit')" v-if="vm.row.editable"><i class="glyphicon glyphicon-pencil"></i></a>
                  <template v-if="vm.row.kind === 'intermediate'">
                    <a href="#" v-confirm:click="'Deassociating a split will erase related data and cannot be recovered.'" v-on:confirm="vm.row.associate( false )" v-show="vm.row.associated">
                      <i class="glyphicon glyphicon-check"></i>
                    </a>
                    <a href="#" v-on:click.prevent="vm.row.associate( true )" v-show="!vm.row.associated">
                      <i class="glyphicon glyphicon-unchecked"></i>
                    </a>
                    <a href="#" v-confirm:click="'Deleted splits cannot be recovered, and all associated data will be lost.'" v-promise:confirm="[vm.row.delete, vm.row]" v-on:done="vm.$emit('remove')"><i class="glyphicon glyphicon-remove"></i></a>
                  </template>
                  <template v-else>
                    <i class="glyphicon glyphicon-check" v-if="vm.row.associated"></i>
                    <i class="glyphicon glyphicon-unchecked" v-else></i>
                  </template>
                </td>
              </tr>
            </template>
          </data-tables>
        </div>
        <div class="col-xs-12">
          <div class="float-left-button">
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#js-split-modal" v-on:click="modalData = blank()">Add&nbsp;<i class="glyphicon glyphicon-plus"></i>
            </button>
          </div>
          <div class="dropdown float-left-button">
            <button class="btn btn-default dropdown-toggle" type="button" id="split-import-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
              Import
              <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="split-import-dropdown">
              <li>
                <ajax-import :url="'/api/v1/events/' + eventModel.id + '/import?dataFormat=csv_splits'" v-on:import="eventModel.fetch()">
                  <span>Import Splits</span>
                </ajax-import>
              </li>
              <li role="separator" class="divider"></li>
              <li><%= link_to 'Download Template', splits_path(format: :csv, params: {filter: {id: 0}}) %></li>
            </ul>
          </div>
          <div class="float-left-button"><%= link_to 'Export', splits_path(format: :csv, filter: {course_id: @presenter&.course_id}), class: 'btn btn-default' %></div>
          <router-link to="/entrants" id="continue-bottom-2" class="btn btn-primary pull-right">Continue&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
          </router-link>
        </div>
      </div>
    </article>
    <edit-modal v-if="eventModel.course" v-model="modalData" :extra="eventModel" v-on:change="!( modalData._dtid ) && eventModel.course.splits.push( modalData );" inline-template>
      <div id="js-split-modal" tabindex="-1" role="dialog" class="modal fade">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
            <div class="modal-body">

              <div class="row">
                <div class="col-xs-12 col-md-6 col-md-push-6">
                  <google-map editable v-model="model" :route="extra.course.splits" :search-url="'/api/v1/staging/' + extra.id + '/get_locations'"></google-map>
                </div>

                <div class="col-xs-12 col-md-6 col-md-pull-6">
                  <div class="row">
                    <div class="form-group col-xs-6">
                      <label class="required">Split Name</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Name of the split or aid station.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <input id="split-name-field" type="text" class="form-control" v-model="model.baseName" autofocus>
                    </div>
                    <div class="form-group col-xs-6">
                      <label>Description</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Add a helpful description of this place.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <input id="split-description-field" type="text" class="form-control" v-model="model.description">
                    </div>
                  </div>
                  <div class="row">
                    <div class="form-group col-xs-6">
                      <label class="required">Distance From Start</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Cumulative distance from the start of the course.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <div class="input-group">
                        <input-units id="split-distance-field" type="text" class="form-control" v-model.number="model.distanceFromStart" v-mask="{ alias: 'decimal', digits: 2 }" :disabled="model.kind === 'start'" :scale="units.forDistance()"/>
                        <span class="input-group-addon">{{ units.distance }}</span>
                      </div>
                    </div>
                    <div class="form-group col-xs-6">
                      <label class="required">Time Recording</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Choose 'Time In' if times will be recorded here only once. Choose 'Time In and Out' if times will be recorded twice, once coming in and once coming out..">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <div class="split-time-recording-wrap">
                        <label class="custom-radio">
                          <input id="split-in-radio" type="radio" name="split-time" :value="['In']" v-model="model.nameExtensions">
                          <span class="custom-radio-indicator"></span>
                          <span class="custom-radio-label">Time In</span>
                        </label>&nbsp;&nbsp;
                        <label class="custom-radio">
                          <input id="split-in-out-radio" type="radio" name="split-time" :value="['In','Out']" v-model="model.nameExtensions" :disabled="model.kind !== 'intermediate'">
                          <span class="custom-radio-indicator"></span>
                          <span class="custom-radio-label">Time In and Out</span>
                        </label>
                      </div>
                    </div>
                  </div>
                  <div class="row">
                    <div class="form-group col-xs-6 vg-group">
                      <label class="required">Vertical Gain From Start</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Cumulative vertical gain from the start of the course.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <div class="input-group">
                        <input-units id="split-vert-gain-field" type="text" class="form-control" v-model.number="model.vertGainFromStart" v-mask="{ alias: 'decimal', digits: 1 }" :disabled="model.kind === 'start'" :scale="units.forElevation()" :places="1"/>
                        <span class="input-group-addon">{{ units.elevation }}</span>
                      </div>
                    </div>
                    <div class="form-group col-xs-6 vg-group">
                      <label class="required">Vertical Loss From Start</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Cumulative vertical loss from the start of the course.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <div class="input-group">
                        <input-units id="split-vert-loss-field" type="text" class="form-control" v-model.number="model.vertLossFromStart" v-mask="{ alias: 'decimal', digits: 1 }" :disabled="model.kind === 'start'" :scale="units.forElevation()" :places="1"/>
                        <span class="input-group-addon">{{ units.elevation }}</span>
                      </div>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-xs-12">
                      <h4><strong>Add A Location</strong></h4>
                    </div>
                  </div>
                  <div class="row">
                    <div class="form-group col-xs-4">
                      <label>Latitude</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Enter latitude or pick a point on the map.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <input id="split-latitude-field" type="text" class="form-control" v-model.number="model.latitude" v-mask="{ alias: 'decimal', digits: 6 }">
                    </div>
                    <div class="form-group col-xs-4">
                      <label>Longitude</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Enter longitude or pick a point on the map.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <input id="split-longitude-field" type="text" class="form-control" v-model.number="model.longitude" v-mask="{ alias: 'decimal', digits: 6 }">
                    </div>
                    <div class="form-group col-xs-4">
                      <label>Elevation</label>
                      <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Enter elevation or pick a point on the map.">
											<i class="glyphicon glyphicon-question-sign"></i>
										</span>
                      <div class="input-group">
                        <input-units id="split-elevation-field" type="text" class="form-control" v-model.number="model.elevation" v-mask="{ alias: 'integer' }" :scale="units.forElevation()"/>
                        <span class="input-group-addon">{{ units.elevation }}</span>
                      </div>
                    </div>
                  </div>
                  <div class="col-xs-12 split-modal-btn-wrap">
                    <span class="brackets" data-dismiss="modal"><a href="#">Cancel</a></span>
                    <button type="button" class="btn btn-primary" data-dismiss="modal" v-bind:disabled="invalid" v-promise:click="[value.submit, value]" v-on:done="$emit('done');" v-on:fail="error = $event.data.errors">
                      <template v-if="!model._dtid">Add Split</template>
                      <template v-else>Done</template>
                    </button>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
      </div>
    </edit-modal>
  </div>
</script>

<script type="text/x-template" id="entrants">
  <div>
    <aside class="col-xs-12">
      <h3>
        <span class="help-tooltip pull-right" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Entrants are all those people competing in the Event."><i class="glyphicon glyphicon-question-sign"></i></span>
        <strong>Provide A List of Your Entrants</strong>
      </h3>
      <p>Create each Entrant on this screen or import them from a standard CSV file.</p>
      <p>
        <router-link to="/splits" class="btn btn-default"><i class="glyphicon glyphicon-arrow-left"></i>&nbsp;Previous
        </router-link>
        <router-link to="/confirmation" id="continue-side-3" class="btn btn-primary">Continue&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
        </router-link>
      </p>
    </aside>
    <article class="col-xs-12">
      <div class="row">
        <div class="col-xs-12 col-sm-7">
          <h5><strong>Your Entrants:</strong></h5>
        </div>
        <div class="col-xs-12 col-sm-5">
          <div class="form-group has-feedback">
            <input type="text" class="form-control" v-model="filter" placeholder="Filter:"/>
            <a href="#" class="form-control-feedback form-control-clickable glyphicon glyphicon-remove" v-on:click.prevent="filter = ''"></a>
          </div>
        </div>
        <div class="col-xs-12">
          <data-tables :rows="eventModel.efforts" :filter="filter" :entries="30" v-on:edit="modalData = $event;">
            <tr slot="header">
              <th data-orderable="false"></th>
              <th>Name</th>
              <th>Gender</th>
              <th>Birthdate</th>
              <th>Location</th>
              <th>
                Bib
              </th>
              <th data-orderable="false">&nbsp;</th>
            </tr>
            <template slot="row" scope="vm">
              <td>
                <i class="glyphicon glyphicon-ok-sign" v-show="vm.row.personId" data-toggle="tooltip" title="This effort has been reconciled"></i>
                <i class="glyphicon glyphicon-question-sign" v-show="!vm.row.personId" data-toggle="tooltip" title="This effort is not reconciled with participants in the database"></i>
              </td>
              <td>{{ vm.row.firstName }} {{ vm.row.lastName }}</td>
              <td>{{ vm.row.gender === 'male' ? 'M' : 'F' }}</td>
              <td>{{ vm.row.birthdate }}</td>
              <td>{{ vm.row.location }}</td>
              <td>{{ vm.row.bibNumber }}</td>

              <td class="edit">
                <a href="#" class="edit" data-toggle="modal" data-target="#js-participant-modal" v-on:click="vm.$emit('edit')"><i class="glyphicon glyphicon-pencil"></i></a>
                <a href="#" v-confirm:click="'A deleted entrant cannot be recovered.'" v-promise:confirm="[vm.row.delete, vm.row]" v-on:done="vm.$emit('remove')"><i class="glyphicon glyphicon-remove"></i></a>
              </td>
            </template>
          </data-tables>
        </div>
        <div class="col-xs-12">
          <div class="float-left-button">
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#js-participant-modal" v-on:click="modalData = blank()">Add&nbsp;<i class="glyphicon glyphicon-plus"></i>
            </button>
          </div>
          <div class="dropdown float-left-button">
            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
              Import
              <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
              <li>
                <ajax-import :url="'/api/v1/events/' + eventModel.id + '/import?dataFormat=csv_efforts'" v-on:import="eventModel.fetch()">
                  <span>Without Times</span>
                </ajax-import>
              </li>
              <li>
                <ajax-import :url="'/api/v1/events/' + eventModel.id + '/import?dataFormat=csv_efforts_elapsed_times'" v-on:import="eventModel.fetch()">
                  <span>With Elapsed Times</span>
                </ajax-import>
              </li>
              <li>
                <ajax-import :url="'/api/v1/events/' + eventModel.id + '/import?dataFormat=csv_efforts_military_times'" v-on:import="eventModel.fetch()">
                  <span>With Absolute Times</span>
                </ajax-import>
              </li>
              <li role="separator" class="divider"></li>
              <li><%= link_to 'Download Template', efforts_path(format: :csv, params: {filter: {id: 0}}) %></li>
            </ul>
          </div>
          <% if @presenter %>
            <div class="float-left-button"><%= link_to 'Export', efforts_path(format: :csv, filter: {event_id: @presenter.id}), class: 'btn btn-default' %></div>
            <div class="float-left-button"><%= link_to 'Reconcile', reconcile_event_path(@presenter), class: 'btn btn-default' %></div>
            <div class="float-left-button"><%= link_to 'Delete All', delete_all_efforts_event_path(@presenter), class: 'btn btn-danger', method: :delete, data: {confirm: 'This will delete all efforts and split times for this event. This action cannot be undone. Are you sure you want to proceed?'} %></div>
          <% end %>
          <div class="pull-right">
            <router-link to="/confirmation" id="continue-bottom-3" class="btn btn-primary pull-right">Continue&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
            </router-link>
          </div>
        </div>
      </div>
    </article>
    <edit-modal v-model="modalData" v-on:done="saveEffort" inline-template>
      <div id="js-participant-modal" tabindex="-1" role="dialog" class="modal fade participant-modal">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-body clearfix">
              <div class="row">
                <div class="col-xs-12">
                  <label class="required">Name</label><br/>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-xs-6">
                  <input id="effort-first-name-field" type="text" class="form-control" v-model="model.firstName" placeholder="First Name" autofocus></input>
                </div>
                <div class="form-group col-xs-6">
                  <input id="effort-last-name-field" type="text" class="form-control" v-model="model.lastName" placeholder="Last Name"></input>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-xs-6">
                  <label class="required">Gender</label><br/>
                  <label class="custom-radio">
                    <input id="effort-male-radio" type="radio" name="gender" value="male" v-model="model.gender" v-on:keydown.77="model.gender = 'male'" v-on:keydown.70="model.gender = 'female'">
                    <span class="custom-radio-indicator"></span>
                    <span class="custom-radio-label">Male</span>
                  </label>&nbsp;&nbsp;
                  <label class="custom-radio">
                    <input id="effort-female-radio" type="radio" name="gender" value="female" v-model="model.gender" v-on:keydown.77="model.gender = 'male'" v-on:keydown.70="model.gender = 'female'">
                    <span class="custom-radio-indicator"></span>
                    <span class="custom-radio-label">Female</span>
                  </label>
                </div>
                <div class="form-group col-xs-6">
                  <label class="required">Date of Birth</label>
                  <input-date id="effort-birthdate-field" v-model="model.birthdate"></input-date>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-xs-6">
                  <label class="required">Bib Number</label>
                  <span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="Bib numbers are not strictly required, but entrants must have bib numbers for their times to be entered in the live time entry screen."><i class="glyphicon glyphicon-question-sign"></i></span>
                  <input id="effort-bib-number-field" type="text" class="form-control" v-model.number="model.bibNumber" v-mask.insert="{ alias: 'integer', placeholder: '' }" placeholder="example: 1234"></input>
                </div>

                <div class="form-group col-xs-6">
                  <label>Age</label>
                  <input id="effort-age-field" type="text" class="form-control" v-model.number="model.age" v-mask.insert="{ alias: 'integer', placeholder: '' }" placeholder=""></input>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-xs-6">
                  <label>Email</label>
                  <input id="effort-email-field" type="text" class="form-control" v-model="model.email" placeholder="example@gmail.com"></input>
                </div>
                <div class="form-group col-xs-6">
                  <label>Phone Number</label>
                  <input id="effort-phone-field" type="text" class="form-control" v-model="model.phone" placeholder="(xxx) xxx - xxxx"></input>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-xs-6">
                  <label>Country</label>
                  <select id="effort-country-select" class="form-control" v-model="model.countryCode" v-on:change="model.stateCode = null">
                    <option :value="null"></option>
                    <option v-for="country in countries" :value="country.code">{{ country.name }}</option>
                  </select>
                </div>
                <div class="form-group col-xs-6">
                  <label>State / Region</label>
                  <select id="effort-state-select" class="form-control" v-model="model.stateCode" :disabled="!model.countryCode">
                    <option :value="null">
                      <template v-if="Object.keys( regions[ model.countryCode ] || [] ).length == 0">N/A</template>
                    </option>
                    <option v-for="( region, index ) in ( regions[ model.countryCode ] || [] )" :value="index">{{ region
                      }}
                    </option>
                  </select>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-xs-6">
                  <label>City</label>
                  <input id="effort-city-field" type="text" class="form-control" v-model="model.city" placeholder="City name"></input>
                </div>

                <div class="form-group col-xs-6">
                  <label>Beacon URL</label>
                  <input id="effort-beacon-url-field" type="text" class="form-control" v-model="model.beaconUrl" placeholder="http://example.com"></input>
                </div>
              </div>
              <div class="row">
                <div class="form-group col-xs-6">
                  <label>Emergency Contact</label>
                  <input id="effort-emergency-contact-field" type="text" class="form-control" v-model="model.emergencyContact" placeholder="Name"></input>
                </div>

                <div class="form-group col-xs-6">
                  <label>Emergency Phone</label>
                  <input id="effort-emergency-phone-field" type="text" class="form-control" v-model="model.emergencyPhone" placeholder="(xxx) xxx - xxxx"></input>
                </div>
              </div>
              <div class="row modal-section">
                <div class="col-xs-12">
                  <div class="row no-gutters">
                    <div class="col-xs-6">
                      <div class="row">
                        <div class="form-group col-xs-12">
                          <label class="required">Entrant's Start
                            Time</label>&nbsp;&nbsp;<span class="help-tooltip" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="If any Entrant will start at a time other than the Event start time, use these fields to indicate start time."><i class="glyphicon glyphicon-question-sign"></i></span>
                        </div>
                      </div>
                      <input-datetime id="effort-start-time-field" v-model="model.startDate" class="no-gutters"></input-datetime>
                    </div>
                    <div class="col-xs-6">
                      <div class="form-group col-xs-12">
                        <label class="required sto-label">Start Time Offset</label>
                      </div>
                      <div class="col-xs-12 sto-input-wrap">
                        <span class="sto-or">or</span>
                        <input id="effort-start-offset-field" type="text" class="form-control sto-input" v-model="model.offsetTime" v-mask.insert="{ alias: 'Regex', regex: '^-?([0-9]*:[0-5]|[0-5]?)[0-9]$', placeholder: '' }" placeholder="hh:mm"></input>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="row p-controls">
                <div class="col-xs-12">
                  <span class="brackets" data-dismiss="modal"><a href="#">Cancel</a></span>
                  <button type="button" class="btn btn-primary" v-bind:disabled="invalid" v-promise:click="[value.post, value]" v-on:done="$emit('done');" v-on:fail="error = $event.data.errors">
                    <template v-if="!model._dtid">Add Entrant</template>
                    <template v-else>Done</template>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </edit-modal>
  </div>
</script>

<script type="text/x-template" id="confirmation">
  <div>
    <aside class="col-xs-12">
      <h3><strong>Confirm Your Event Information</strong></h3>
      <p>Take a moment to make sure everything is right before you make your Event public.</p>
      <p>
        <router-link to="/entrants" class="btn btn-default"><i class="glyphicon glyphicon-arrow-left"></i>&nbsp;Previous
        </router-link>
        <router-link to="/published" class="btn btn-primary">Publish&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
        </router-link>
      </p>
    </aside>
    <article class="col-xs-12">
      <table class="table confirmation-table">
        <tbody>
        <tr>
          <th>Event Name</th>
          <td>{{ eventModel.name }}</td>
          <td><span class="brackets"><router-link to="/">Edit</router-link></span></td>
        </tr>
        <tr>
          <th>Start Date</th>
          <td>{{ eventModel.virtualStartTime ? eventModel.virtualStartTime.toLocaleString() : 'NaN' }}</td>
          <td><span class="brackets"><router-link to="/">Edit</router-link></span></td>
        </tr>
        <tr>
          <th>Description</th>
          <td>{{ eventModel.description }}</td>
          <td><span class="brackets"><router-link to="/">Edit</router-link></span></td>
        </tr>
        <tr v-if="eventModel.course">
          <th>Course</th>
          <td>{{ eventModel.course.name }}</td>
          <td><span class="brackets"><router-link to="/">Edit</router-link></span></td>
        </tr>
        <tr v-if="eventModel.course">
          <th>Distance</th>
          <td :class="'unit-' + units.distance">{{ units.round( eventModel.course.endSplit( 'finish' ).distanceFromStart
            * units.forDistance(), 2 ) }}
          </td>
          <td><span class="brackets"><router-link to="/">Edit</router-link></span></td>
        </tr>
        <tr v-if="eventModel.course">
          <th>Vertical Gain</th>
          <td :class="'unit-' + units.elevation">{{ units.round( eventModel.course.endSplit( 'finish'
            ).vertGainFromStart * units.forElevation(), 2 ) }}
          </td>
          <td><span class="brackets"><router-link to="/">Edit</router-link></span></td>
        </tr>
        <tr v-if="eventModel.course">
          <th>Vertical Loss</th>
          <td :class="'unit-' + units.elevation">{{ units.round( eventModel.course.endSplit( 'finish'
            ).vertLossFromStart * units.forElevation(), 1 ) }}
          </td>
          <td><span class="brackets"><router-link to="/">Edit</router-link></span></td>
        </tr>
        <tr v-if="eventModel.course">
          <th><span>Your Course and Splits</span></th>
          <td>
            <google-map fit :route="eventModel.course.splits"></google-map>
          </td>
          <td><span class="brackets"><router-link to="/splits">Edit</router-link></span></td>
        </tr>
        <tr>
          <th>
            <span>Entrants<br><span class="participants-count">({{ eventModel.efforts.length }})</span></span>
          </th>
          <td>
						<span class="row-content" v-for="participant in eventModel.efforts">
							{{ participant.firstName }} {{ participant.lastName }}<span v-if="eventModel.efforts.length > 1">,</span>
						</span>
          </td>
          <td><span class="brackets"><router-link to="/entrants">Edit</router-link></span></td>
        </tr>
        </tbody>
      </table>
      <div class="row">
        <div class="col-xs-12">
          <router-link to="/published" class="btn btn-primary pull-right">Publish&nbsp;<i class="glyphicon glyphicon-arrow-right"></i>
          </router-link>
        </div>
      </div>
    </article>
  </div>
</script>

<script type="text/x-template" id="published">
  <div>
    <article class="col-xs-12 published-page">
      <span class="large-check"></span>
      <h2>Your Event Has Been Published</h2>
      <p>Congratulations! Your Event is now available for the world to see. You can return and edit the Event, Splits,
        or Entrants at any time. If this step was premature, click 'Make Private Again' to hold off for now. </p>
      <a href="/" class="btn btn-primary">Return Home</a><br>
      <a href="#" v-promise:click="[eventModel.visibility, eventModel]" v-on:done="$router.push( '/confirmation' )">Make
        Private Again</a>
    </article>
  </div>
</script>

<!-- Vue.js Applet -->
<script>
    window._rails_assets || (window._rails_assets = {})
    window._rails_assets.dotGreen = "<%= asset_path( 'icons/dot-green.svg' ) %>";
    window._rails_assets.dotBlue = "<%= asset_path( 'icons/dot-blue.svg' ) %>";
    window._rails_assets.dotLBlue = "<%= asset_path( 'icons/dot-lblue.svg' ) %>";
    window._rails_assets.dotCheckered = "<%= asset_path( 'icons/dot-checkered.svg' ) %>";
    window._rails_assets.marker = "<%= asset_path( 'icons/green.svg' ) %>";
</script>
<div id="event-app" data-id="<%= @presenter&.id %>">
  <header class="ost-header">
    <div class="container">
      <div class="row">
        <div class="ost-title col-xs-12">
          <h1>
            <strong v-if="!isReady">Loading...</strong>
            <strong v-else-if="eventModel.__new__">Create Event</strong>
            <strong v-else>
              {{ eventModel.name }}
              <i v-if="eventModel.concealed" class="glyphicon glyphicon-eye-close" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="This Event is not yet visible to the public."></i>
              <i v-else class="glyphicon glyphicon-eye-open" tabindex="-1" data-toggle="static-popover" data-placement="bottom" data-content="This Event is visible to the public."></i>
            </strong>
          </h1>
          <ul class="breadcrumb breadcrumb-ost">
            <% if @presenter&.organization %>
              <li><%= link_to 'Organizations', organizations_path %></li>
              <li><%= link_to @presenter.organization.name, organization_path(@presenter.organization) %></li>
              <li><a><%= @presenter.event_group.name %></a></li>
            <% end %>
            <li class="active">Staging</li>
          </ul>
        </div>
      </div>
      <% if @presenter %>
        <%= render 'events/view_buttons', view_object: @presenter %>
      <% end %>
    </div>
  </header>

  <aside class="ost-toolbar">
    <div class="container">
      <nav class="progress-bar-nav">
        <ul>
          <li is="router-link" to="/" tag="li" exact><a href="#"><span>Your Event</span></a></li>
          <li is="router-link" to="/splits" tag="li"><a href="#"><span>Splits</span></a></li>
          <li is="router-link" to="/entrants" tag="li"><a href="#"><span>Entrants</span></a></li>
          <li is="router-link" to="/confirmation" tag="li"><a href="#"><span>Confirmation</span></a></li>
          <li is="router-link" to="/published" tag="li"><a href="#"><span>Published</span></a></li>
        </ul>
      </nav>
    </div>
  </aside>

  <div class="container">
    <div class="row" v-if="!isReady" style="padding: 150px;">
      <%= image_tag("icons/loading.gif", alt: 'Loading', size: '30') %>
    </div>
    <div class="row">
      <div is="router-view" v-bind:event-model="eventModel"></div>
    </div>
  </div>
</div>
